geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccounts, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
#scale_x_date(limits= c(as.Date("2020-01-01"), as.Date("2022-01-01")),
#             date_labels = "%b %Y", sec.axis = sec_axis(~. +0, name = "", breaks = dfKeyDates$Date, labels = as.character(dfKeyDates$Label))) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#
sapply(dfJointStorageFlexStackMelt,"class")
nDataYearMax <- 2021
nMonthLast <- 9
nNegotiate <- 0.75 # maf of storage to negotiate
dfAccounts <- data.frame(Name = c("Capacity", "Negotiate", "Mexico", "UpperBasin", "LowerBasin", "SharedReserve"),
Order = seq(6,1, by=-1))
#Filter out the last record
dfJointStorageFlexStack <- dfJointStorage %>% filter(Year == nDataYearMax, month == nMonthLast)
#Drop the final 2 columns
dfJointStorageFlexStack <- dfJointStorageFlexStack[ !(names(dfJointStorageFlexStack) %in% c("LowerBasinConserve", "MexicoConserve"))]
#Duplicate the last record
dfJointStorageFlexStackCopy <- dfJointStorageFlexStack
#Make the date something arbitrary earlier
dfJointStorageFlexStackCopy$Year <- nDataYearMax - 1
dfJointStorageFlexStack <- rbind(dfJointStorageFlexStack, dfJointStorageFlexStackCopy )
# #Add a zeros row
# dfTest <- dfJointStorageFlexStack[1,]
# dfTest$DateAsValue <- as.Date("2022-01-01")
# dfTest[,2:ncol(dfTest)] <- NA
# dfJointStorageFlexStack <- rbind(dfJointStorageFlexStack, dfTest)
# #Recalculate the year
# dfJointStorageFlexStack$Year <- year(dfJointStorageFlexStack$DateAsValue)
#Calculate incremental pool volumes. Start with Shared Reserve and work up.
dfJointStorageFlexStack$SharedReserve <- nProtectCombined
dfJointStorageFlexStack$LowerBasin <- as.double((dfICSBalance %>% filter(Year == nMaxYearICSData) %>% select(Total))/1e6)
dfJointStorageFlexStack$UpperBasin <- dfJointStorageFlexStack$PowellStorage - as.double((dfProtectLevel %>% filter(Reservoir =="Powell") %>% select(Volume))/1e6) - nNegotiate
dfJointStorageFlexStack$Mexico <- as.double(dfICSBalance %>% filter(Year == nMaxYearICSData) %>% select(Mexico)/1e6)
#dfJointStorageFlexStack$Mexico <- ifelse(dfJointStorageFlexStack$Year <= nMaxYearICSData, 0/1e6, 0)
dfJointStorageFlexStack$Negotiate <- dfJointStorageFlexStack$PowellStorage + dfJointStorageFlexStack$MeadStorage - (nProtectCombined + dfJointStorageFlexStack$LowerBasin + dfJointStorageFlexStack$UpperBasin + dfJointStorageFlexStack$Mexico)
dfJointStorageFlexStack$Capacity <- nCapacityCombined - (dfJointStorageFlexStack$PowellStorage + dfJointStorageFlexStack$MeadStorage)
#Melt the data
dfJointStorageFlexStackMelt <- melt(dfJointStorageFlexStack, id.vars = c("Year"), measure.vars = c("SharedReserve", "LowerBasin", "UpperBasin", "Mexico", "Negotiate", "Capacity"))
#Specify the order of the variables
dfJointStorageFlexStackMelt$variable <- factor(dfJointStorageFlexStackMelt$variable, levels= as.character(dfAccounts$Name))
#Get the color palettes
#Get the blue color bar
pBlues <- brewer.pal(9,"Blues")
pReds <- brewer.pal(9,"Reds")
xPosAsYear <- 2020.5
dfVolumes <- (dfJointStorageFlexStackMelt %>% filter(Year == nMaxYearResData) %>% select(value, variable) %>% mutate(Volume = value))
dfAccounts$xPositionFlex <- xPosAsYear
#Mexico gets offset
dfAccounts$xPositionFlex[3] <- 2020.25
dfAccounts <- left_join(dfAccounts, dfVolumes , by = c("Name" = "variable"))
#Reorder
dfAccountsSort <- dfAccounts[order(dfAccounts$Order),]
dfAccountsSort$CumVol <- cumsum(dfAccountsSort$Volume)
dfAccountsSort$YPos <- dfAccountsSort$CumVol - dfAccountsSort$Volume/2
#Join the cumulative sum to the melt so can plot dividing lines between the areas
dfJointStorageFlexStackMelt <- left_join(dfJointStorageFlexStackMelt,dfAccountsSort, by = c("variable" = "Name"))
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
# geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccounts, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
#scale_x_date(limits= c(as.Date("2020-01-01"), as.Date("2022-01-01")),
#             date_labels = "%b %Y", sec.axis = sec_axis(~. +0, name = "", breaks = dfKeyDates$Date, labels = as.character(dfKeyDates$Label))) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
# geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
#scale_x_date(limits= c(as.Date("2020-01-01"), as.Date("2022-01-01")),
#             date_labels = "%b %Y", sec.axis = sec_axis(~. +0, name = "", breaks = dfKeyDates$Date, labels = as.character(dfKeyDates$Label))) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#
ggplot() +
#Combined Storage
#As area
#geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
#scale_x_date(limits= c(as.Date("2020-01-01"), as.Date("2022-01-01")),
#             date_labels = "%b %Y", sec.axis = sec_axis(~. +0, name = "", breaks = dfKeyDates$Date, labels = as.character(dfKeyDates$Label))) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=Volume, group=Volume)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
#scale_x_date(limits= c(as.Date("2020-01-01"), as.Date("2022-01-01")),
#             date_labels = "%b %Y", sec.axis = sec_axis(~. +0, name = "", breaks = dfKeyDates$Date, labels = as.character(dfKeyDates$Label))) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
sapply(dfJointStorageFlexStackMelt,"class")
dfJointStorageFlexStackMelt$variable <- factor(dfJointStorageFlexStackMelt$variable, levels= dfAccounts$Name)
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
#scale_x_date(limits= c(as.Date("2020-01-01"), as.Date("2022-01-01")),
#             date_labels = "%b %Y", sec.axis = sec_axis(~. +0, name = "", breaks = dfKeyDates$Date, labels = as.character(dfKeyDates$Label))) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
scale_x_date(labels = NULL) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
scale_x_continuous(labels = NULL) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
###################################################
#### PLOT for MEAD
nNegotiate <- 0.4 # maf of storage to negotiate
dfAccounts <- data.frame(Name = c("Capacity", "Negotiate", "Mexico", "UpperBasin", "LowerBasin", "SharedReserve"),
Order = seq(6,1, by=-1))
#Filter out the last record
dfJointStorageFlexStack <- dfJointStorage %>% filter(Year == nDataYearMax, month == nMonthLast)
#Drop the final 2 columns
dfJointStorageFlexStack <- dfJointStorageFlexStack[ !(names(dfJointStorageFlexStack) %in% c("LowerBasinConserve", "MexicoConserve"))]
#Duplicate the last record
dfJointStorageFlexStackCopy <- dfJointStorageFlexStack
#Make the date something arbitrary earlier
dfJointStorageFlexStackCopy$Year <- nDataYearMax - 1
dfJointStorageFlexStack <- rbind(dfJointStorageFlexStack, dfJointStorageFlexStackCopy )
# #Add a zeros row
# dfTest <- dfJointStorageFlexStack[1,]
# dfTest$DateAsValue <- as.Date("2022-01-01")
# dfTest[,2:ncol(dfTest)] <- NA
# dfJointStorageFlexStack <- rbind(dfJointStorageFlexStack, dfTest)
# #Recalculate the year
# dfJointStorageFlexStack$Year <- year(dfJointStorageFlexStack$DateAsValue)
#Calculate incremental pool volumes. Start with Shared Reserve and work up.
dfJointStorageFlexStack$SharedReserve <- nProtectCombined
dfJointStorageFlexStack$LowerBasin <- as.double((dfICSBalance %>% filter(Year == nMaxYearICSData) %>% select(Total))/1e6)
dfJointStorageFlexStack$UpperBasin <- dfJointStorageFlexStack$PowellStorage - as.double((dfProtectLevel %>% filter(Reservoir =="Powell") %>% select(Volume))/1e6) - nNegotiate
dfJointStorageFlexStack$Mexico <- as.double(dfICSBalance %>% filter(Year == nMaxYearICSData) %>% select(Mexico)/1e6)
#dfJointStorageFlexStack$Mexico <- ifelse(dfJointStorageFlexStack$Year <= nMaxYearICSData, 0/1e6, 0)
dfJointStorageFlexStack$Negotiate <- dfJointStorageFlexStack$PowellStorage + dfJointStorageFlexStack$MeadStorage - (nProtectCombined + dfJointStorageFlexStack$LowerBasin + dfJointStorageFlexStack$UpperBasin + dfJointStorageFlexStack$Mexico)
dfJointStorageFlexStack$Capacity <- nCapacityCombined - (dfJointStorageFlexStack$PowellStorage + dfJointStorageFlexStack$MeadStorage)
#Melt the data
dfJointStorageFlexStackMelt <- melt(dfJointStorageFlexStack, id.vars = c("Year"), measure.vars = c("SharedReserve", "LowerBasin", "UpperBasin", "Mexico", "Negotiate", "Capacity"))
#Specify the order of the variables
dfJointStorageFlexStackMelt$variable <- factor(dfJointStorageFlexStackMelt$variable, levels= dfAccounts$Name)
#Get the color palettes
#Get the blue color bar
pBlues <- brewer.pal(9,"Blues")
pReds <- brewer.pal(9,"Reds")
xPosAsYear <- 2020.5
dfVolumes <- (dfJointStorageFlexStackMelt %>% filter(Year == nMaxYearResData) %>% select(value, variable) %>% mutate(Volume = value))
dfAccounts$xPositionFlex <- xPosAsYear
#Mexico gets offset
dfAccounts$xPositionFlex[3] <- 2020.25
dfAccounts <- left_join(dfAccounts, dfVolumes , by = c("Name" = "variable"))
#Reorder
dfAccountsSort <- dfAccounts[order(dfAccounts$Order),]
dfAccountsSort$CumVol <- cumsum(dfAccountsSort$Volume)
dfAccountsSort$YPos <- dfAccountsSort$CumVol - dfAccountsSort$Volume/2
#Join the cumulative sum to the melt so can plot dividing lines between the areas
dfJointStorageFlexStackMelt <- left_join(dfJointStorageFlexStackMelt,dfAccountsSort, by = c("variable" = "Name"))
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
scale_x_continuous(labels = NULL) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
nNegotiate <- 0.75 # maf of storage to negotiate
dfAccounts <- data.frame(Name = c("Capacity", "Negotiate", "Mexico", "UpperBasin", "LowerBasin", "SharedReserve"),
Order = seq(6,1, by=-1))
#Filter out the last record
dfJointStorageFlexStack <- dfJointStorage %>% filter(Year == nDataYearMax, month == nMonthLast)
#Drop the final 2 columns
dfJointStorageFlexStack <- dfJointStorageFlexStack[ !(names(dfJointStorageFlexStack) %in% c("LowerBasinConserve", "MexicoConserve"))]
#Duplicate the last record
dfJointStorageFlexStackCopy <- dfJointStorageFlexStack
#Make the date something arbitrary earlier
dfJointStorageFlexStackCopy$Year <- nDataYearMax - 1
dfJointStorageFlexStack <- rbind(dfJointStorageFlexStack, dfJointStorageFlexStackCopy )
# #Add a zeros row
# dfTest <- dfJointStorageFlexStack[1,]
# dfTest$DateAsValue <- as.Date("2022-01-01")
# dfTest[,2:ncol(dfTest)] <- NA
# dfJointStorageFlexStack <- rbind(dfJointStorageFlexStack, dfTest)
# #Recalculate the year
# dfJointStorageFlexStack$Year <- year(dfJointStorageFlexStack$DateAsValue)
#Calculate incremental pool volumes. Start with Shared Reserve and work up.
dfJointStorageFlexStack$SharedReserve <- nProtectCombined
dfJointStorageFlexStack$LowerBasin <- as.double((dfICSBalance %>% filter(Year == nMaxYearICSData) %>% select(Total))/1e6)
dfJointStorageFlexStack$UpperBasin <- dfJointStorageFlexStack$PowellStorage - as.double((dfProtectLevel %>% filter(Reservoir =="Powell") %>% select(Volume))/1e6) - nNegotiate
dfJointStorageFlexStack$Mexico <- as.double(dfICSBalance %>% filter(Year == nMaxYearICSData) %>% select(Mexico)/1e6)
#dfJointStorageFlexStack$Mexico <- ifelse(dfJointStorageFlexStack$Year <= nMaxYearICSData, 0/1e6, 0)
dfJointStorageFlexStack$Negotiate <- dfJointStorageFlexStack$PowellStorage + dfJointStorageFlexStack$MeadStorage - (nProtectCombined + dfJointStorageFlexStack$LowerBasin + dfJointStorageFlexStack$UpperBasin + dfJointStorageFlexStack$Mexico)
dfJointStorageFlexStack$Capacity <- nCapacityCombined - (dfJointStorageFlexStack$PowellStorage + dfJointStorageFlexStack$MeadStorage)
#Melt the data
dfJointStorageFlexStackMelt <- melt(dfJointStorageFlexStack, id.vars = c("Year"), measure.vars = c("SharedReserve", "LowerBasin", "UpperBasin", "Mexico", "Negotiate", "Capacity"))
#Specify the order of the variables
dfJointStorageFlexStackMelt$variable <- factor(dfJointStorageFlexStackMelt$variable, levels= dfAccounts$Name)
#Get the color palettes
#Get the blue color bar
pBlues <- brewer.pal(9,"Blues")
pReds <- brewer.pal(9,"Reds")
xPosAsYear <- 2020.5
dfVolumes <- (dfJointStorageFlexStackMelt %>% filter(Year == nMaxYearResData) %>% select(value, variable) %>% mutate(Volume = value))
dfAccounts$xPositionFlex <- xPosAsYear
#Mexico gets offset
dfAccounts$xPositionFlex[3] <- 2020.25
dfAccounts <- left_join(dfAccounts, dfVolumes , by = c("Name" = "variable"))
#Reorder
dfAccountsSort <- dfAccounts[order(dfAccounts$Order),]
dfAccountsSort$CumVol <- cumsum(dfAccountsSort$Volume)
dfAccountsSort$YPos <- dfAccountsSort$CumVol - dfAccountsSort$Volume/2
#Join the cumulative sum to the melt so can plot dividing lines between the areas
dfJointStorageFlexStackMelt <- left_join(dfJointStorageFlexStackMelt,dfAccountsSort, by = c("variable" = "Name"))
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
scale_x_continuous(labels = NULL) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
#
sapply(dfJointStorageFlexStackMelt, "class")
dfJointStorageFlexStackMelt$variable <- factor(dfJointStorageFlexStackMelt$variable, levels= dfAccounts$Name)
ggplot() +
#Combined Storage
#As area
geom_area(data=dfJointStorageFlexStackMelt, aes(x=Year, y=Volume, fill=variable, group=variable)) +
#Thin lines to separate accounts
geom_line(data=dfJointStorageFlexStackMelt %>% filter(Order > 1, Order <6), aes(x=Year, y=CumVol, color = "Combined", group = variable), size = 1, color = "Black") +
#Top of combined storage as thick line
geom_line(data=dfJointStorageFlexStack,aes(x=Year,y=MeadStorage+PowellStorage, color="Combined"), size=2, color = "Black") +
#geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +
#lines for max capacity and protect elevation
geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype="longdash", size=1) +
#lines for Interim Guidelines and Expiry
#geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = "dashed", size=1, color = pReds[9]) +
#Labels for the areas
geom_text(data=dfAccountsSort, aes(x=xPositionFlex, y=YPos, label=as.character(Name)), size = 6, fontface="bold") +
#geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf("%.0f-01-01",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface="bold", color = pBlues[5]) +
#Scales
scale_x_continuous(labels = NULL) +
#scale_y_continuous(limits = c(0,NA)) +
# secondary axis is not working
# scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = "", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +
#Secondary axis as percent
scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = "Percent of Combined Capacity", breaks = seq(0,100,by=25), labels = sprintf("%d%%", seq(0,100,by=25)))) +
scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[4], pBlues[5], pBlues[6], pBlues[8])) +
#    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +
#scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +
#scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +
#scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) +
theme_bw() +
#coord_fixed() +
labs(x="", y="Combined Active Storage\n(MAF)", color = "") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.position ="none")
#theme(text = element_text(size=20), legend.text=element_text(size=16)
###################################################
#### PLOT for MEAD
