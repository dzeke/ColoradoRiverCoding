"0","  "
"0","### Combined plot for proposal that shows:"
"0","###    - combined protection level"
"0","###    - Lake Mead conservation account balances"
"0","## Read in ICS account balance data"
"0","sExcelFile <- 'IntentionallyCreatedSurplus-Summary.xlsx'"
"0","dfICSBalance <- read_excel(sExcelFile, sheet = ""Sheet1"",  range = ""B6:G17"")"
"0","nMaxYearICSData <- max(dfICSBalance$Year)"
"0","#Duplicate the largest year and set the year to largest value plus 1"
"0","dfICSBalance <- rbind(dfICSBalance, dfICSBalance %>% filter(Year == nMaxYearICSData) %>% mutate(Year = nMaxYearICSData+1))"
"0","#Order by decreasing year"
"0","dfICSBalance <- dfICSBalance[order(-dfICSBalance$Year),]"
"0","#Turn time into a index by month. Year 1 = 1, Year 2 = 13"
"0","dfICSBalance$MonthIndex <- 12*(dfICSBalance$Year - dfICSBalance$Year[nrow(dfICSBalance)]) + 12"
"0","#Turn the ICS year into monthly"
"0","dfICSmonths = expand.grid(Year = unique(dfICSBalance$Year), month = 1:12)"
"0","dfICSmonths$MonthIndex <- 12*(dfICSmonths$Year - dfICSmonths$Year[nrow(dfICSmonths)]) + dfICSmonths$month"
"0","#Filter off first year but keep last month"
"0","dfICSmonths <- dfICSmonths %>% filter(dfICSmonths$MonthIndex >= 12)"
"0","#Calculate a date"
"0","dfICSmonths$Date <- as.Date(sprintf(""%d-%d-01"",dfICSmonths$Year, dfICSmonths$month))"
"0","#Interpolate Lower Basin conservation account balances by Month"
"0","dfICSmonths$LowerBasinConserve <- interp1(xi = dfICSmonths$MonthIndex, x=dfICSBalance$MonthIndex, y = dfICSBalance$Total, method=""linear"" )"
"0","#Interpolate Mexico conservation account balance by Month"
"0","dfICSmonths$MexicoConserve <- interp1(xi = dfICSmonths$MonthIndex, x=dfICSBalance$MonthIndex, y = dfICSBalance$Mexico, method=""linear"" )"
"0","## Calculate the Protection elevation"
"0","dfProtectLevel <- data.frame(Reservoir = c(""Powell"", ""Mead""), Elevation = c(3525, 1020))"
"0","#Interpolate storage from elevation"
"0","dfProtectLevel$Volume[1] <- interpNA(xi = dfProtectLevel$Elevation[1], x= dfPowellElevStor$`Elevation (ft)`, y=dfPowellElevStor$`Live Storage (ac-ft)`)"
"0","dfProtectLevel$Volume[2] <- interpNA(xi = dfProtectLevel$Elevation[2], x= dfMeadElevStor$`Elevation (ft)`, y=dfMeadElevStor$`Live Storage (ac-ft)`)"
"0","nProtectCombined <- sum(dfProtectLevel$Volume)/1e6"
"0","nCapacityCombined <- (dfMaxStor[1,2] + dfMaxStor[2,2])"
"0","nLastVolumeCombined <- dfJointStorage$PowellStorage[629] + dfJointStorage$MeadStorage[629]"
"0","#Data frame of key dates"
"0","dfKeyDates <- data.frame(Date = as.Date(c(""2007-01-01"", ""2026-01-01"")), Label = c(""Interim\nGuidelines"", ""Guidelines\nExpire""))"
"0","#Data frame of key elevations"
"0","dfKeyVolumes <- data.frame(Volume = c(nProtectCombined, nCapacityCombined), Label = c(""Protect"",""Combined\nCapacities""))"
"0","#Data frame of key traces"
"0","dfKeyTraceLabels <- data.frame(Label = c(""Protect Mindset"", ""Available\nWater"", ""Lake Mead\nConservation\nAccounts"", ""Deficit Mindset""),"
"0","                                Volume = c(nProtectCombined/2, 18, 25, 40), xPosition = rep(2007 + (nMaxYearICSData - 2007)/2,4),"
"0","                                Size = c(6, 6, 5, 6))"
"0","#Adjust the x positions of the Available water and LB + MX conserved water"
"0","dfKeyTraceLabels$xPosition[2] <- 2009"
"0","dfKeyTraceLabels$xPosition[3] <- (2026 + nMaxYearICSData + 0.825 )/2"
"0","#Data frame of end arrows"
"0","nArrowOffset <- 4"
"0","dfEndArrows <- data.frame(Label = c(""Recover?"", ""Stabilize?"", ""Draw down?""), Ystart = rep(nLastVolumeCombined,3), "
"0","                            Xstart = as.Date(rep(""2022-01-01"",3)), Xend = as.Date(rep(""2025-01-01"",3)),"
"0","                            Yend = c(nLastVolumeCombined + nArrowOffset, nLastVolumeCombined, nLastVolumeCombined - nArrowOffset),"
"0","                            Angle = c(20,0,-20), Yoffset = c(0.1, 0, -0.1))"
"0","#Calculate the mid date"
"0","dfEndArrows$MidDate <- dfEndArrows$Xstart + floor((dfEndArrows$Xend - dfEndArrows$Xstart)/2)"
"0","#Left join the ICS data to the joint storage data to get the entire date range"
"0","dfJointStorage <- left_join(dfJointStorage, dfICSmonths, by=c(""DateAsValue"" = ""Date""))"
"0","#Convert NAs to zeros"
"0","dfJointStorage$Year <- year(dfJointStorage$DateAsValue)"
"0","dfJointStorageClean <- dfJointStorage[,2:ncol(dfJointStorage)] %>% filter(Year <= nMaxYearICSData)"
"0","dfJointStorageClean[is.na(dfJointStorageClean)] <- 0"
"0","dfTemp <- dfJointStorage %>% filter(Year <= nMaxYearICSData) %>% select(DateAsValue)"
"0","dfJointStorageClean$DateAsValue <- dfTemp$DateAsValue"
"0","#Add rows for years 2022 to 2030 with all zeros"
"0","dfYearsAdd <- data.frame(Year = seq(nMaxYearICSData+1, nMaxYearICSData + 10, by = 1))"
"0","dfJointStorageZeros <- dfJointStorageClean[1,1:(ncol(dfJointStorageClean)-1)]"
"0","dfJointStorageZeros[1, ] <- 0"
"0","dfJointStorageZeros <- as.data.frame(lapply(dfJointStorageZeros,  rep, nrow(dfYearsAdd)))"
"0","dfJointStorageZeros$Year <- dfYearsAdd$Year"
"0","#Calculate a date"
"0","dfJointStorageZeros$DateAsValue <- as.Date(sprintf(""%.0f-01-01"", dfJointStorageZeros$Year))"
"0","#Bind to the Clean data frame"
"0","dfJointStorageClean <- rbind(dfJointStorageClean, dfJointStorageZeros)"
"0","#New data frame for area"
"0","dfJointStorageStack <- dfJointStorageClean"
"0","dfJointStorageStack$Protect <- nProtectCombined"
"0","dfJointStorageStack$LowerBasin <- ifelse(dfJointStorageStack$Year <= nMaxYearICSData, dfJointStorageStack$LowerBasinConserve/1e6, 0)"
"0","dfJointStorageStack$Mexico <- ifelse(dfJointStorageStack$Year <= nMaxYearICSData, dfJointStorageStack$MexicoConserve/1e6, 0)"
"0","dfJointStorageStack$AvailableWater <- ifelse(dfJointStorageStack$Year <= nMaxYearICSData, dfJointStorageStack$PowellStorage + dfJointStorageStack$MeadStorage - dfJointStorageStack$Protect - dfJointStorageStack$LowerBasin - dfJointStorageStack$Mexico, 0)"
"0","dfJointStorageStack$Capacity <- ifelse(dfJointStorageStack$Year <= nMaxYearICSData, nCapacityCombined - dfJointStorageStack$AvailableWater - dfJointStorageStack$Protect - dfJointStorageStack$LowerBasin - dfJointStorageStack$Mexico, 0)"
"0","#Melt the data"
"0","dfJointStorageStackMelt <- melt(dfJointStorageStack, id.vars = c(""DateAsValue""), measure.vars = c(""Protect"",""LowerBasin"", ""Mexico"", ""AvailableWater"", ""Capacity""))"
"0","#Specify the order of the variables"
"0","dfJointStorageStackMelt$variable <- factor(dfJointStorageStackMelt$variable, levels=c(""Capacity"",""AvailableWater"", ""Mexico"", ""LowerBasin"", ""Protect""))"
"0","#Get the color palettes"
"0","#Get the blue color bar"
"0","pBlues <- brewer.pal(9,""Blues"")"
"0","pReds <- brewer.pal(9,""Reds"")"
"0","ggplot() +"
"0","  #Combined Storage"
"0","  #As area"
"0","  geom_area(data=dfJointStorageStackMelt, aes(x=DateAsValue, y=value, fill=variable, group=variable)) +"
"0","  #As line"
"0","  geom_line(data=dfJointStorageStack %>% filter(Year < nMaxYearICSData + 1),aes(x=DateAsValue,y=MeadStorage+PowellStorage, color=""Combined""), size=2, color = ""Black"") +"
"0","  #geom_area(data=dfPlotData,aes(x=month,y=stor_maf, fill = variable), position='stack') +"
"0","  "
"0","  geom_hline(data=dfKeyVolumes, aes(yintercept = Volume), linetype=""longdash"", size=1) +"
"0","  #lines for Interim Guidelines and Expiry"
"0","  geom_vline(data=dfKeyDates, aes(xintercept = Date), linetype = ""dashed"", size=1, color = pReds[9]) +"
"0","  #Labels for the areas"
"0","  geom_text(data=dfKeyTraceLabels %>% filter(Label != dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf(""%.0f-01-01"",xPosition)), y=Volume, label=as.character(Label)), size = 6, fontface=""bold"") +"
"0","  geom_text(data=dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf(""%.0f-01-01"",xPosition)), y=Volume, label=as.character(Label)), size = 4.5, fontface=""bold"", color = pBlues[5]) +"
"0"," "
"0","  #Arrow Lake Mead conservation account label"
"0","  geom_curve(data = dfKeyTraceLabels %>% filter(Label == dfKeyTraceLabels$Label[3]), aes(x=as.Date(sprintf(""%.0f-01-01"",xPosition)), xend = as.Date(sprintf(""%.0f-02-01"",nMaxYearICSData+1)), y=20.5, yend = 13), curvature = -0.5, color = pBlues[5], size = 1.0, arrow = arrow(length = unit(0.03, ""npc""))) +"
"0","  "
"0","  "
"0","  #Label what is next"
"0","  #geom_text(data = dfEndArrows %>% filter(Label == ""Recover?""), aes(x= MidDate, y = Ystart, label = ""Recover?\nStabilize?\nDraw down?""), size = 5, color = ""Black"") +"
"0","  #Label the arrows"
"0","  #geom_text(data = dfEndArrows, aes(x = Xstart, y = (Ystart+Yend)/2 + Yoffset, label = Label, angle = Angle), size = 5, color = ""Black"", hjust = 0) +"
"0","  "
"0","  #geom_segment(aes(x=as.Date(""2022-01-01""), xend=as.Date(""2025-01-01""), y=12, yend = 14, colour = palBlues[7], arrow = arrow())) +"
"0","  "
"0","  "
"0","    "
"0","  #scale_y_continuous(limits = c(0,NA)) +"
"0","  # secondary axis is not working"
"0","  # scale_y_continuous(limits = c(0,NA), sec_axis(~. +0, name = """", breaks = dfKeyVolumes$Volume, labels = dfKeyVolumes$Volume)) +"
"0","  #Secondary axis as percent"
"0","  scale_y_continuous(limits = c(0,NA), sec.axis = sec_axis(~ . /nCapacityCombined*100, name = ""Percent of Combined Capacity"", breaks = seq(0,100,by=25), labels = sprintf(""%d%%"", seq(0,100,by=25)))) +"
"0","  "
"0","  scale_fill_manual(values=c(pReds[3], pBlues[3], pBlues[5], pBlues[5], pBlues[7])) +"
"0","  "
"0","  #    scale_y_continuous(breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]),labels=c(0,5.98,9.6,12.2,dfMaxStor[2,2]),  sec.axis = sec_axis(~. +0, name = ""Mead Level (feet)"", breaks = c(0,5.98,9.6,12.2,dfMaxStor[2,2]), labels = c(895,1025,1075,1105,1218.8))) +"
"0","  #scale_x_discrete(breaks=cMonths, labels= cMonthsLabels) +"
"0","  #scale_x_continuous(breaks=seq(1960,2020,by=10), labels= seq(1960,2020,by=10)) +"
"0","  "
"0","  "
"0","  #scale_fill_manual(breaks=c(1:6),values = palBlues[2:7]) + #,labels = variable) + "
"0","  theme_bw() +"
"0","  #coord_fixed() +"
"0","  labs(x="""", y=""Combined Active Storage\n(MAF)"", color = """") +"
"0","  theme(text = element_text(size=20), legend.title=element_blank(), legend.position =""none"")"
