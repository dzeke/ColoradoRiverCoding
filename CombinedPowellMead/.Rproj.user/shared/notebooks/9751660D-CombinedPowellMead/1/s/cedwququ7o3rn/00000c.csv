"0","# CombinedPowellMead.R"
"0","#"
"0","# Plots that show the combined storage of Lake Powell and Lake Mead."
"0","#"
"0","# 1. Import the reservoir elevation-volume curves"
"0","# 2. Import historical reservoir storage data"
"0","# 3. Import the conservation account data for Lake Mead"
"0","#"
"0","# This is a beginning R-programming effort! There could be lurking bugs or basic coding errors that I am not even aware of."
"0","# Please report bugs/feedback to me (contact info below)"
"0","#"
"0","# David E. Rosenberg"
"0","# July 6, 2021"
"0","# Utah State University"
"0","# david.rosenberg@usu.edu"
"0","rm(list = ls())  #Clear history"
"0","# Load required libraies"
"0","if (!require(tidyverse)) { "
"0","  install.packages(""tidyverse"", repos=""http://cran.r-project.org"") "
"0","  library(tidyverse) "
"0","}"
"0","if (!require(readxl)) { "
"0","  install.packages(""readxl"", repos=""http://cran.r-project.org"") "
"0","  library(readxl) "
"0","}"
"0","  "
"0","if (!require(RColorBrewer)) { "
"0","  install.packages(""RColorBrewer"",repos=""http://cran.r-project.org"") "
"0","  library(RColorBrewer) # "
"0","}"
"0","if (!require(dplyr)) { "
"0","  install.packages(""dplyr"",repos=""http://cran.r-project.org"") "
"0","  library(dplyr) # "
"0","}"
"0","if (!require(expss)) { "
"0","  install.packages(""expss"",repos=""http://cran.r-project.org"") "
"0","  library(expss) # "
"0","}"
"0","if (!require(reshape2)) { "
"0","  install.packages(""reshape2"", repos=""http://cran.r-project.org"") "
"0","  library(reshape2) "
"0","}"
"0","if (!require(pracma)) { "
"0","  install.packages(""pracma"", repos=""http://cran.r-project.org"") "
"0","  library(pracma) "
"0","}"
"0","if (!require(lubridate)) { "
"0","  install.packages(""lubridate"", repos=""http://cran.r-project.org"") "
"0","  library(lubridate) "
"0","}"
"0","if (!require(directlabels)) { "
"0","  install.packages(""directlabels"", repo=""http://cran.r-project.org"")"
"0","  library(directlabels) "
"0","}"
"0","if (!require(plyr)) { "
"0","  install.packages(""plyr"", repo=""http://cran.r-project.org"")"
"0","  library(plyr) "
"0","}"
"0","if (!require(ggrepel)) { "
"0","  devtools::install_github(""slowkow/ggrepel"")"
"0","  library(ggrepel) "
"0","}"
"0","# New function interpNA to return NAs for values outside interpolation range (from https://stackoverflow.com/questions/47295879/using-interp1-in-r)"
"0","interpNA <- function(x, y, xi = x, ...) {"
"0","  yi <- rep(NA, length(xi));"
"0","  sel <- which(xi >= range(x)[1] & xi <= range(x)[2]);"
"0","  yi[sel] <- interp1(x = x, y = y, xi = xi[sel], ...);"
"0","  return(yi);"
"0","}"
"0","###This reservoir data comes from CRSS. It was exported to Excel."
"0","# Read elevation-storage data in from Excel"
"0","sExcelFile <- 'MeadDroughtContingencyPlan.xlsx'"
"0","dfMeadElevStor <- read_excel(sExcelFile, sheet = ""Mead-Elevation-Area"",  range = ""A4:D676"")"
"0","dfPowellElevStor <- read_excel(sExcelFile, sheet = 'Powell-Elevation-Area',  range = ""A4:D689"")"
"0","# Read in Reservoir Pools Volumes / Zones from Excel"
"0","dfPoolVols <- read_excel(sExcelFile, sheet = ""Pools"",  range = ""D31:O43"")"
"0","# Read in Reserved Flood Storage"
"0","dfReservedFlood <- read_excel(sExcelFile, sheet = ""Pools"",  range = ""C46:E58"")"
"0","#Convert dates to months"
"0","dfReservedFlood$month_num <- month(as.POSIXlt(dfReservedFlood$Month, format=""%Y-%m-%Y""))"
"0","### This historical reservoir level data comes from USBR websites."
"0","# File name to read in historical Powell Volume from CSV (download from USBR)"
"0","#    Water Operations: Historic Data, Upper Colorado River Division, U.S. Buruea of Reclamation"
"0","#    https://www.usbr.gov/rsvrWater/HistoricalApp.html"
"0","sPowellHistoricalFile <- 'PowellDataUSBRJan2019.csv'"
"0","sPowellHistoricalFile <- 'PowellDataUSBRMay2021.csv'"
"0","# File name to read in Mead end of month reservoir level in feet - cross tabulated by year (1st column) and month (subsequent columns)"
"0","#    LAKE MEAD AT HOOVER DAM, END OF MONTH ELEVATION (FEET), Lower COlorado River Operations, U.S. Buruea of Reclamation"
"0","#    https://www.usbr.gov/lc/region/g4000/hourly/mead-elv.html"
"0","sMeadHistoricalFile <- 'MeadLevel.xlsx'"
"0","# Read in the historical Powell data"
"0","dfPowellHistorical <- read.csv(file=sPowellHistoricalFile, "
"0","                               header=TRUE, "
"0","                               "
"0","                               stringsAsFactors=FALSE,"
"0","                               sep="","")"
"0","# Read in the historical Mead data"
"0","dfMeadHistorical <- read_excel(sMeadHistoricalFile)"
"0","#Convert cross-tabulated Mead months into timeseries"
"0","dfMeadHist <- melt(dfMeadHistorical, id.vars = c(""Year""))"
"0","dfMeadHist$BeginOfMonStr <- paste(dfMeadHist$Year,dfMeadHist$variable,""1"",sep=""-"")"
"0","dfMeadHist$BeginOfMon <- as.Date(dfMeadHist$BeginOfMonStr, ""%Y-%b-%d"")"
"0","dfMeadHist$BeginNextMon <- dfMeadHist$BeginOfMon %m+% months(1)"
"0","#Filter out NAs"
"0","dfMeadHist <- dfMeadHist %>% filter(!is.na(dfMeadHist$value))"
"0","#Filter out low storages below min"
"0","dfMeadHist <- dfMeadHist %>% filter(dfMeadHist$value > min(dfMeadElevStor$`Elevation (ft)`))"
"0","dfMeadHist$Stor <- interp1(xi = dfMeadHist$value,y=dfMeadElevStor$`Live Storage (ac-ft)`,x=dfMeadElevStor$`Elevation (ft)`, method=""linear"")"
"0","#Interpolate Powell storage from level to check"
"0","dtStart <- as.Date(""1963-12-22"")"
"0","dfPowellHist <- dfPowellHistorical[15:705,] #%>% filter(dfPowellHistorical$Date >= dtStart) # I don't like this hard coding but don't know a way around"
"0","#Convert NAs to zeros"
"0","dfPowellHist[is.na(dfPowellHist)] <- 0"
"0","#Convert date text to date value"
"0","dfPowellHist$DateAsValueError <- as.Date(dfPowellHist$Date,""%d-%b-%y"")"
"0","#Apparently R breaks the century at an odd place"
"0","#Coerce the years after 2030 (really 1930) to be in prior century (as.Date conversion error)"
"0","dfPowellHist$Year <- as.numeric(format(dfPowellHist$DateAsValueError,""%Y""))"
"0","dfPowellHist$DateAsValue <- dfPowellHist$DateAsValueError"
"0","#dfPowellHist$DateAsValue[dfPowellHist$Year > 2030] <- dfPowellHist$DateAsValue[dfPowellHist$Year > 2030] %m-% months(12*100)"
"0","#dfPowellHist$StorCheck <- interp1(xi = dfPowellHist$Elevation..feet.,y=dfPowellElevStor$`Live Storage (ac-ft)`,x=dfPowellElevStor$`Elevation (ft)`, method=""linear"")"
"0","#dfPowellHist$StorDiff <- dfPowellHist$Storage..af. - dfPowellHist$StorCheck"
"0","#Merge the Mead and Powell Storage Time series"
"0","dfJointStorage <- merge(dfPowellHist[,c(""DateAsValue"",""Storage..af."",""Total.Release..cfs."")],dfMeadHist[,c(""BeginNextMon"",""Stor"")],by.x = ""DateAsValue"", by.y=""BeginNextMon"", all.x = TRUE, sort=TRUE)"
"0","#Rename columns so they are easier to distinquish"
"0","dfJointStorage$PowellStorage <- dfJointStorage$Storage..af./1000000"
"0","dfJointStorage$PowellRelease <- dfJointStorage$Total.Release..cfs."
"0","dfJointStorage$MeadStorage <- dfJointStorage$Stor/1000000"
"0","#dfJointStorage$DateAsValue <- as.Date(dfJointStorage$Date,""%d-%b-%y"")"
"0","#Remove the old columns"
"0","dfJointStorage <- dfJointStorage[, !names(dfJointStorage) %in% c(""Storage..af."",""Total.Release..cfs."",""Stor"")]"
"0","#Add a column for decade"
"0","dfJointStorage$decade <- round_any(as.numeric(format(dfJointStorage$DateAsValue,""%Y"")),10,f=floor)"
"0","#dfJointStorage$DecadeAsClass <- dfJointStorage %>% mutate(category=cut(decade, breaks=seq(1960,2020,by=10), labels=seq(1960,2020,by=10)))"
"0","# Define maximum storages"
"0","dfMaxStor <- data.frame(Reservoir = c(""Powell"",""Mead""),Volume = c(24.32,25.9))"
