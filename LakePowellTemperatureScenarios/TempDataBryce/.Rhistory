install.packages("reshape", repos="http://cran.r-project.org")
library(reshape)
}
if (!require(reshape2)) {
install.packages("reshape2", repos="http://cran.r-project.org")
library(reshape2)
}
if (!require(pracma)) {
install.packages("pracma", repos="http://cran.r-project.org")
library(pracma)
}
if (!require(lubridate)) {
install.packages("lubridate", repos="http://cran.r-project.org")
library(lubridate)
}
if (!require(directlabels)) {
install.packages("directlabels", repo="http://cran.r-project.org")
library(directlabels)
}
#if (!require(plyr)) {
#  install.packages("plyr", repo="http://cran.r-project.org")
#  library(plyr)
#}
if (!require(ggrepel)) {
devtools::install_github("slowkow/ggrepel")
library(ggrepel)
}
library(dygraphs)
library(xts)          # To make the convertion data-frame / xts format
library(tidyverse)
library(lubridate)
dMetersToFeet = 3.28
#Define the River locations to use
dfLocations <- data.frame(filename = c("LeesFerry_water_temp.csv", "Mile30_water_temp.csv","Mile61_water_temp.csv","Mile76_water_temp.csv","Mile149_water_temp.csv","Mile194_water_temp.csv"),
rivermile = c(0,30,61,76,149,194),
locname = c("Lees Ferry", "Marble", "Little Colorado", "LCR to Bright Angle","Kanab?","West Central"))
dfLocations$filename <- ifelse(dfLocations$rivermile == 0,"LeesFerry_water_temp.csv",paste0("Mile",dfLocations$rivermile,"_water_temp.csv"))
View(dfLocations)
dfTempFile <- read.csv(file=dfLocations$filename[1],
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
dfTempAllLocs <- data.frame(DateTime = 0, water_temp = 0)
dfTempAllLocs <- data.frame(DateTime = 0, water_temp = 0, location = 0)
dfTempAllLocs <- data.frame(DateTime = 0, water_temp = 0, rivermile = 0, location = 0)
i <- 1
# Read in the historical Powell data
dfTempFile <- read.csv(file=dfLocations$filename[i],
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
dfTempFile$rivermile <- dfLocations$rivermile[i]
dfTempFile$location <- dfLocations$locname[i]
#bind the latest record to the existing records
dfTempAllLocs <- rbind(dfTempAllLocs,dfTempFile)
dfTempAllLocs <- data.frame(DateTime = 0, water_temp = 0, rivermile = 0, location = 0)
for(i in 1:nrow(dfLocations)){
# i <- 1
# Read in the historical Powell data
dfTempFile <- read.csv(file=dfLocations$filename[i],
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
dfTempFile$rivermile <- dfLocations$rivermile[i]
dfTempFile$location <- dfLocations$locname[i]
#bind the latest record to the existing records
dfTempAllLocs <- rbind(dfTempAllLocs,dfTempFile)
}
dfTempAllLocs <- dfTempAllLocs[2:end,]
dfTempAllLocs <- dfTempAllLocs[2:nrow(dfTempAllLocs),]
dfTempAllLocs$DateClean <- as.Date(dfTempAllLocs$DateTime, "%m/%d/%Y")
dfTempAllLocs$DateTimeClean <- mdy_hms(dfTempAllLocs$DateTime)
dfTempAllLocs$DateClean <- as.Date(dfTempAllLocs$DateTime, "%m/%d/%Y")
#Convert the time
dfTempAllLocs$DateTimeClean <- mdy_hms(dfTempAllLocs$DateTime)
ggplot(dfTempAllLocs, aes(x = DateTimeClean, y= water_temp, group=rivermile, color=rivermile)) +
geom_line() +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
dfTempAllLocs <- data.frame(DateTime = 0, water_temp = 0, rivermile = 0, location = 0)
for(i in 1:nrow(dfLocations)){
# i <- 1
# Read in the historical Powell data
dfTempFile <- read.csv(file=dfLocations$filename[i],
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
dfTempFile$rivermile <- as.factor(dfLocations$rivermile[i])
dfTempFile$location <- as.factor(dfLocations$locname[i])
#bind the latest record to the existing records
dfTempAllLocs <- rbind(dfTempAllLocs,dfTempFile)
}
#Remove the first dummy row
dfTempAllLocs <- dfTempAllLocs[2:nrow(dfTempAllLocs),]
dfTempAllLocs$DateClean <- as.Date(dfTempAllLocs$DateTime, "%m/%d/%Y")
#Convert the time
dfTempAllLocs$DateTimeClean <- mdy_hms(dfTempAllLocs$DateTime)
ggplot(dfTempAllLocs, aes(x = DateTimeClean, y= water_temp, group=rivermile, color=rivermile)) +
geom_line() +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocs, aes(x = DateTimeClean, y= water_temp, group=rivermile, color=rivermile)) +
geom_line() +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
scale_color_manual(values = palBlues[3:8], breaks = c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
#Grab color palettes
palBlues <- brewer.pal(9, "Blues")
palReds <- brewer.pal(9, "Reds")
ggplot(dfTempAllLocs, aes(x = DateTimeClean, y= water_temp, group=rivermile, color=rivermile)) +
geom_line() +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
scale_color_manual(values = palBlues[3:8], breaks = c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocs, aes(x = DateTimeClean, y= water_temp, group=rivermile, color=rivermile)) +
geom_line() +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
## Calculate daily min, max, average, range
dfTempAllLocsAgg <- dfTempAllLocs %>% group_by(DateClean) %>% summarize(minDay = min(water_temp),
maxDay = max(water_temp),
avgDay = mean(water_temp),
rangeDay = max(water_temp) - min(water_temp))
#Pull out Year, Month, Month as abbr, Day for plotting
dfTempAllLocsAgg$Year <- year(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$Month <- month(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$MonthTxt <- format(dfTempAllLocsAgg$DateClean, "%b")
dfTempAllLocsAgg$Day <- day(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$WaterYear <- ifelse(dfTempAllLocsAgg$Month >= 10,dfTempAllLocsAgg$Year, dfTempAllLocsAgg$Year - 1 )
dfTempAllLocsAgg$DayOfYear <- yday(dfTempAllLocsAgg$DateClean)
dfDaysPerYear <- dfTempAllLocsAgg %>% group_by(Year) %>% summarize(numDays = n())
dfDaysPerMonthYear <- dfTempAllLocsAgg %>% group_by(Year,Month) %>% summarize(numDays = n())
dfTempAllLocsAgg <- dfTempAllLocs %>% group_by(DateClean, rivermile, location) %>% summarize(minDay = min(water_temp),
maxDay = max(water_temp),
avgDay = mean(water_temp),
rangeDay = max(water_temp) - min(water_temp))
#Pull out Year, Month, Month as abbr, Day for plotting
dfTempAllLocsAgg$Year <- year(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$Month <- month(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$MonthTxt <- format(dfTempAllLocsAgg$DateClean, "%b")
dfTempAllLocsAgg$Day <- day(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$WaterYear <- ifelse(dfTempAllLocsAgg$Month >= 10,dfTempAllLocsAgg$Year, dfTempAllLocsAgg$Year - 1 )
dfTempAllLocsAgg$DayOfYear <- yday(dfTempAllLocsAgg$DateClean)
dfDaysPerYear <- dfTempAllLocsAgg %>% group_by(Year) %>% summarize(numDays = n())
dfDaysPerMonthYear <- dfTempAllLocsAgg %>% group_by(Year,Month) %>% summarize(numDays = n())
ggplot(dfTempAllLocsAgg, aes(x = DateClean, y = avgDay, group=rivermile, color=rivermile)) +
geom_line() +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
palBlueFunc <- colorRampPalette(c(palBlues[3],palBlues[9]))
pPlot <- ggplot(dfTempAllLocsAgg, aes(rangeDay, group=Month, color=MonthTxt)) +
stat_ecdf(geom = "step") +
#scale_x_continuous(limits = c(2,22), breaks = seq(2,22,by=2)) +
#scale_y_continuous(breaks = seq(0,11,by=2)) +
scale_color_manual(values = palBlueFunc(12)) +
xlim(0,2) +
facet_wrap( ~ rivermile ) +
labs(x="Daily Range of River Temperature (oC)", y="Cumulative Frequency\n(number of days)", color = "Month") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
direct.label(pPlot, "angled.boxes" )
dfTempAllLocs <- data.frame(DateTime = 0, water_temp = 0, rivermile = 0, location = 0)
for(i in 1:nrow(dfLocations)){
# i <- 1
# Read in the historical Powell data
dfTempFile <- read.csv(file=dfLocations$filename[i],
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
dfTempFile$rivermile <- as.factor(dfLocations$rivermile[i], levels = dfLocations$rivermile)
dfTempFile$location <- as.factor(dfLocations$locname[i], levels = dfLocations$rivermile)
#bind the latest record to the existing records
dfTempAllLocs <- rbind(dfTempAllLocs,dfTempFile)
}
#Remove the first dummy row
dfTempAllLocs <- dfTempAllLocs[2:nrow(dfTempAllLocs),]
dfTempAllLocs <- data.frame(DateTime = 0, water_temp = 0, rivermile = 0, location = 0)
for(i in 1:nrow(dfLocations)){
# i <- 1
# Read in the historical Powell data
dfTempFile <- read.csv(file=dfLocations$filename[i],
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
dfTempFile$rivermile <- factor(dfLocations$rivermile[i], levels = dfLocations$rivermile)
dfTempFile$location <- factor(dfLocations$locname[i], levels = dfLocations$rivermile)
#bind the latest record to the existing records
dfTempAllLocs <- rbind(dfTempAllLocs,dfTempFile)
}
#Remove the first dummy row
dfTempAllLocs <- dfTempAllLocs[2:nrow(dfTempAllLocs),]
dfTempAllLocs$DateClean <- as.Date(dfTempAllLocs$DateTime, "%m/%d/%Y")
#Convert the time
dfTempAllLocs$DateTimeClean <- mdy_hms(dfTempAllLocs$DateTime)
## Calculate daily min, max, average, range
dfTempAllLocsAgg <- dfTempAllLocs %>% group_by(DateClean, rivermile, location) %>% summarize(minDay = min(water_temp),
maxDay = max(water_temp),
avgDay = mean(water_temp),
rangeDay = max(water_temp) - min(water_temp))
#Pull out Year, Month, Month as abbr, Day for plotting
dfTempAllLocsAgg$Year <- year(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$Month <- month(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$MonthTxt <- format(dfTempAllLocsAgg$DateClean, "%b")
dfTempAllLocsAgg$Day <- day(dfTempAllLocsAgg$DateClean)
dfTempAllLocsAgg$WaterYear <- ifelse(dfTempAllLocsAgg$Month >= 10,dfTempAllLocsAgg$Year, dfTempAllLocsAgg$Year - 1 )
dfTempAllLocsAgg$DayOfYear <- yday(dfTempAllLocsAgg$DateClean)
dfDaysPerYear <- dfTempAllLocsAgg %>% group_by(Year) %>% summarize(numDays = n())
dfDaysPerMonthYear <- dfTempAllLocsAgg %>% group_by(Year,Month) %>% summarize(numDays = n())
#Grab color palettes
palBlues <- brewer.pal(9, "Blues")
palReds <- brewer.pal(9, "Reds")
ggplot(dfTempAllLocsAgg, aes(x = DateClean, y = avgDay, group=rivermile, color=rivermile)) +
geom_line() +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
pPlot <- ggplot(dfTempAllLocsAgg, aes(rangeDay, group=Month, color=MonthTxt)) +
stat_ecdf(geom = "step") +
#scale_x_continuous(limits = c(2,22), breaks = seq(2,22,by=2)) +
#scale_y_continuous(breaks = seq(0,11,by=2)) +
scale_color_manual(values = palBlueFunc(12)) +
xlim(0,2) +
facet_wrap( ~ rivermile ) +
labs(x="Daily Range of River Temperature (oC)", y="Cumulative Frequency\n(number of days)", color = "Month") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
direct.label(pPlot, "angled.boxes" )
pPlot <- ggplot(dfTempAllLocsAgg, aes(rangeDay, group=WaterYear, color=WaterYear)) +
stat_ecdf(geom = "step") +
#scale_x_continuous(limits = c(2,22), breaks = seq(2,22,by=2)) +
#scale_y_continuous(breaks = seq(0,11,by=2)) +
scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Water Year") +
xlim(0,2) +
facet_wrap( ~ rivermile ) +
labs(x="Daily Range of River Temperature (oC)", y="Cumulative Frequency\n(number of days)", color = "Water Year") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
direct.label(pPlot, "angled.boxes" )
ggplot() +
geom_errorbar(data = dfTempAllLocsAgg, aes(x=Day,ymin= minDay, ymax=maxDay), color=rivermile, group=rivermile) +
scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Temperature (oC)", color="Location") +
theme(text = element_text(size=12), legend.title=element_blank(), legend.text=element_text(size=10),
legend.key = element_blank())
ggplot() +
geom_errorbar(data = dfTempAllLocsAgg, aes(x=Day,ymin= minDay, ymax=maxDay, color=rivermile, group=rivermile)) +
scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Temperature (oC)", color="Location") +
theme(text = element_text(size=12), legend.title=element_blank(), legend.text=element_text(size=10),
legend.key = element_blank())
ggplot() +
geom_errorbar(data = dfTempAllLocsAgg, aes(x=DateClean,ymin= minDay, ymax=maxDay, color=rivermile, group=rivermile)) +
scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Temperature (oC)", color="Location") +
theme(text = element_text(size=12), legend.title=element_blank(), legend.text=element_text(size=10),
legend.key = element_blank())
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=DateClean,y=rivermile,fill=avgDay)) +
geom_contour(aes(x=DateClean,y=rivermile,z=avgDay),color="black") +
scale_x_continuous("X",expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = terrain.colors(10)) +
coord_fixed()
palBlueFunc <- colorRampPalette(c(palBlues[3],palBlues[9]))
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=DateClean,y=as.value(rivermile),fill=avgDay)) +
geom_contour(aes(x=DateClean,y=as.value(rivermile),z=avgDay),color="black") +
scale_x_continuous("X",expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = terrain.colors(10)) +
coord_fixed()
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=DateClean,y=as.numeric(rivermile),fill=avgDay)) +
geom_contour(aes(x=DateClean,y=as.numeric(rivermile),z=avgDay),color="black") +
scale_x_continuous("X",expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = terrain.colors(10)) +
coord_fixed()
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
scale_x_continuous("X",expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = terrain.colors(10)) +
coord_fixed()
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
scale_x_continuous("X",expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
#geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
#scale_x_continuous("X",expand = c(0,0)) +
#scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
#geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
#scale_x_continuous("X",expand = c(0,0)) +
#scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = palReds[3:8]) +
#scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
#geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
#scale_x_continuous("X",expand = c(0,0)) +
#scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = palReds[3:8]) +
#scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18))
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
#geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
#scale_x_continuous("X",expand = c(0,0)) +
#scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z",colours = palReds[3:8]) +
#scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.text=element_text(size=18))
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
#geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
#scale_x_continuous("X",expand = c(0,0)) +
#scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Temperature (oC)",colours = palReds[3:8]) +
#scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.text=element_text(size=18))
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
#geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
#scale_x_continuous("X",expand = c(0,0)) +
#scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Temperature (oC)",colours = palReds[1:9]) +
#scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.text=element_text(size=18))
pPlot <- ggplot(dfTempAllLocsAgg, aes(rangeDay, group=Month, color=MonthTxt)) +
stat_ecdf(geom = "step") +
#scale_x_continuous(limits = c(2,22), breaks = seq(2,22,by=2)) +
#scale_y_continuous(breaks = seq(0,11,by=2)) +
scale_color_manual(values = palBlueFunc(12)) +
xlim(0,2) +
facet_wrap( ~ rivermile ) +
labs(x="Daily Range of River Temperature (oC)", y="Cumulative Frequency\n(number of days)", color = "Month") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
direct.label(pPlot, "angled.boxes" )
ggsave("RiverTemperatureRangeCDFs.png", width=9, height = 6.5, units="in")
ggplot(data = dfTempAllLocsAgg) +
geom_tile(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),fill=avgDay)) +
#geom_contour(aes(x=as.numeric(DateClean),y=as.numeric(rivermile),z=avgDay),color="black") +
#scale_x_continuous("X",expand = c(0,0)) +
#scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Temperature (oC)",colours = palReds[1:9]) +
#scale_fill_gradientn("Z",colours = terrain.colors(10)) +
labs(x="Day", y="River mile", color = "Temperature (oC)") +
theme(text = element_text(size=20), legend.text=element_text(size=18))
ggsave("DateRiverMileTempSurface.png", width=9, height = 6.5, units="in")
pPlot <- ggplot(dfTempAllLocsAgg, aes(rangeDay, group=WaterYear, color=WaterYear)) +
stat_ecdf(geom = "step") +
#scale_x_continuous(limits = c(2,22), breaks = seq(2,22,by=2)) +
#scale_y_continuous(breaks = seq(0,11,by=2)) +
scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Water Year") +
xlim(0,2) +
facet_wrap( ~ rivermile ) +
labs(x="Daily Range of River Temperature (oC)", y="Cumulative Frequency\n(number of days)", color = "Water Year") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
direct.label(pPlot, "angled.boxes" )
ggsave("RiverTemperatureRangeByYearCDF.png", width=9, height = 6.5, units="in")
mtplot = ggplot(dfTempAllLocsAgg) +
geom_point(aes(x=DateClean,y=as.numeric(rivermile),color=avgDay)) +
#scale_color_continuous(limits=c(0,8))
#Preview how the plot will look by setting `preview = TRUE`: We also adjust the angle of the light.
# \donttest{
plot_gg(mtplot, width=3.5, sunangle=225, preview = TRUE)
ibrary(plot_gg)
library(plot_gg)
install.packages(plot_gg)
install.packages("plot_gg")
library(plot_gg)
mtplot = ggplot(dfTempAllLocsAgg) +
geom_point(aes(x=DateClean,y=as.numeric(rivermile),color=avgDay)) +
#scale_color_continuous(limits=c(0,8))
#Preview how the plot will look by setting `preview = TRUE`: We also adjust the angle of the light.
# \donttest{
plot_gg(mtplot, width=3.5, sunangle=225, preview = TRUE)
library(plot_gg)
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay)) +
geom_line() +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, group=DateClean)) +
geom_line() +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, color=Year, group=DateClean)) +
geom_line() +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, color=Year, group=DateClean)) +
geom_line() +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
ylim(8,20) +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Location") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, color=Year, group=DateClean)) +
geom_line() +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
ylim(8,20) +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Year") +
theme(text = element_text(size=20), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, color=Year, group=DateClean)) +
geom_line() +
facet_grid( Year ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
ylim(8,20) +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Year") +
theme(text = element_text(size=20), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, color=Year, group=DateClean)) +
#geom_line() +
geom_errorbar(aes(ymin= minDay, ymax=maxDay, color=Year, group=DateClean)) +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
ylim(8,20) +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Water Temperature (oC)", color = "Year") +
theme(text = element_text(size=20), legend.text=element_text(size=18),
legend.key = element_blank())
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, color=Year, group=DateClean)) +
geom_line() +
#geom_errorbar(aes(ymin= minDay, ymax=maxDay, color=Year, group=DateClean)) +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
ylim(8,20) +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="", y="Daily Average Water Temperature (oC)", color = "Year") +
theme(text = element_text(size=20), legend.text=element_text(size=18),
legend.key = element_blank())
ggsave("TempVsRiverMile.png", width=9, height = 6.5, units="in")
pPlot <- ggplot(dfTempAllLocsAgg, aes(rangeDay, group=Month, color=MonthTxt)) +
stat_ecdf(geom = "step") +
#scale_x_continuous(limits = c(2,22), breaks = seq(2,22,by=2)) +
#scale_y_continuous(breaks = seq(0,11,by=2)) +
scale_color_manual(values = palBlueFunc(12)) +
xlim(0,2) +
facet_wrap( ~ rivermile ) +
labs(x="Daily Range of River Temperature (oC)", y="Cumulative Frequency\n(number of days)", color = "Month") +
theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
legend.key = element_blank())
direct.label(pPlot, "angled.boxes" )
ggsave("RiverTemperatureRangeCDFs.png", width=9, height = 6.5, units="in")
ggplot(dfTempAllLocsAgg, aes(x = as.numeric(rivermile), y = avgDay, color=Year, group=DateClean)) +
geom_line() +
#geom_errorbar(aes(ymin= minDay, ymax=maxDay, color=Year, group=DateClean)) +
facet_wrap( ~ Month) +
# scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color", name="Year") +
ylim(8,20) +
#scale_color_manual(values = palBlues[3:8], breaks = c(194,149,76,61,30,0)) + #c(0,30,61,76,149,194)) +
labs(x="River mile", y="Daily Average Water Temperature (oC)", color = "Year") +
theme(text = element_text(size=20), legend.text=element_text(size=18),
legend.key = element_blank())
ggsave("TempVsRiverMile.png", width=9, height = 6.5, units="in")
